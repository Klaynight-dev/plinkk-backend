
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  userName: 'userName',
  email: 'email',
  profileLink: 'profileLink',
  profileImage: 'profileImage',
  profileIcon: 'profileIcon',
  profileSiteText: 'profileSiteText',
  iconUrl: 'iconUrl',
  description: 'description',
  profileHoverColor: 'profileHoverColor',
  degBackgroundColor: 'degBackgroundColor',
  neonEnable: 'neonEnable',
  buttonThemeEnable: 'buttonThemeEnable',
  EnableAnimationArticle: 'EnableAnimationArticle',
  EnableAnimationButton: 'EnableAnimationButton',
  EnableAnimationBackground: 'EnableAnimationBackground',
  backgroundSize: 'backgroundSize',
  selectedThemeIndex: 'selectedThemeIndex',
  selectedAnimationIndex: 'selectedAnimationIndex',
  selectedAnimationButtonIndex: 'selectedAnimationButtonIndex',
  selectedAnimationBackgroundIndex: 'selectedAnimationBackgroundIndex',
  animationDurationBackground: 'animationDurationBackground',
  delayAnimationButton: 'delayAnimationButton',
  canvaEnable: 'canvaEnable',
  selectedCanvasIndex: 'selectedCanvasIndex'
};

exports.Prisma.LinkScalarFieldEnum = {
  id: 'id',
  icon: 'icon',
  url: 'url',
  text: 'text',
  name: 'name',
  description: 'description',
  showDescriptionOnHover: 'showDescriptionOnHover',
  showDescription: 'showDescription',
  userId: 'userId'
};

exports.Prisma.LabelScalarFieldEnum = {
  id: 'id',
  data: 'data',
  color: 'color',
  fontColor: 'fontColor',
  userId: 'userId'
};

exports.Prisma.SocialIconScalarFieldEnum = {
  id: 'id',
  url: 'url',
  icon: 'icon',
  userId: 'userId'
};

exports.Prisma.BackgroundColorScalarFieldEnum = {
  id: 'id',
  color: 'color',
  userId: 'userId'
};

exports.Prisma.NeonColorScalarFieldEnum = {
  id: 'id',
  color: 'color',
  userId: 'userId'
};

exports.Prisma.StatusbarScalarFieldEnum = {
  id: 'id',
  text: 'text',
  colorBg: 'colorBg',
  colorText: 'colorText',
  fontTextColor: 'fontTextColor',
  statusText: 'statusText',
  userId: 'userId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Link: 'Link',
  Label: 'Label',
  SocialIcon: 'SocialIcon',
  BackgroundColor: 'BackgroundColor',
  NeonColor: 'NeonColor',
  Statusbar: 'Statusbar'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/marvideo/Documents/plinkk-backend/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/marvideo/Documents/plinkk-backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                               String  @id @unique // username slug (sans espace)\n  userName                         String\n  email                            String  @unique\n  profileLink                      String? @default(\"https://github.com\")\n  profileImage                     String? @default(\"https://avatars.githubusercontent.com/u/9919?s=200&v=4\")\n  profileIcon                      String? @default(\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\")\n  profileSiteText                  String? @default(\"Github\")\n  iconUrl                          String? @default(\"https://avatars.githubusercontent.com/u/9919?s=200&v=4\")\n  description                      String? @default(\"Mollit laboris cupidatat do enim nulla ex laborum. Nulla labore reprehenderit nisi non anim aute.\")\n  profileHoverColor                String? @default(\"#7289DA\")\n  degBackgroundColor               Int?    @default(45)\n  neonEnable                       Int     @default(1)\n  buttonThemeEnable                Int     @default(1)\n  EnableAnimationArticle           Int     @default(1)\n  EnableAnimationButton            Int     @default(1)\n  EnableAnimationBackground        Int     @default(1)\n  backgroundSize                   Int?    @default(50)\n  selectedThemeIndex               Int?    @default(13)\n  selectedAnimationIndex           Int?    @default(0)\n  selectedAnimationButtonIndex     Int?    @default(10)\n  selectedAnimationBackgroundIndex Int?    @default(10)\n  animationDurationBackground      Int?    @default(30)\n  delayAnimationButton             Float?  @default(0.1)\n  canvaEnable                      Int     @default(1)\n  selectedCanvasIndex              Int?    @default(16)\n\n  // Relations\n  links       Link[]\n  labels      Label[]\n  socialIcons SocialIcon[]\n  background  BackgroundColor[]\n  neonColors  NeonColor[]\n  statusbar   Statusbar?\n}\n\nmodel Link {\n  id                     Int      @id @default(autoincrement())\n  icon                   String?  @default(\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\")\n  url                    String   @default(\"https://github.com/link\")\n  text                   String?  @default(\"Link\")\n  name                   String?  @default(\"Github\")\n  description            String?  @default(\"Ma description\")\n  showDescriptionOnHover Boolean? @default(true)\n  showDescription        Boolean? @default(true)\n\n  userId String\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel Label {\n  id        Int    @id @default(autoincrement())\n  data      String @default(\"Developer\")\n  color     String @default(\"#FF6384\")\n  fontColor String @default(\"#FFFFFF\")\n\n  userId String\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel SocialIcon {\n  id   Int    @id @default(autoincrement())\n  url  String @default(\"https://github.com\")\n  icon String @default(\"Github\")\n\n  userId String\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel BackgroundColor {\n  id    Int    @id @default(autoincrement())\n  color String @default(\"#FF5733\")\n\n  userId String\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel NeonColor {\n  id    Int    @id @default(autoincrement())\n  color String @default(\"#7289DA\")\n\n  userId String\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel Statusbar {\n  id            Int     @id @default(autoincrement())\n  text          String? @default(\"Hello World!\")\n  colorBg       String? @default(\"#222222\")\n  colorText     String? @default(\"#cccccc\")\n  fontTextColor Int?    @default(1)\n  statusText    String? @default(\"busy\") // offline / online / busy / away\n\n  userId String @unique\n  user   User   @relation(fields: [userId], references: [id])\n}\n",
  "inlineSchemaHash": "f9d6de4aed64687f317cb173972dfdc09ddb760cd153ee096f2d046c47b45c14",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileIcon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileSiteText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iconUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileHoverColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"degBackgroundColor\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"neonEnable\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"buttonThemeEnable\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"EnableAnimationArticle\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"EnableAnimationButton\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"EnableAnimationBackground\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"backgroundSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"selectedThemeIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"selectedAnimationIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"selectedAnimationButtonIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"selectedAnimationBackgroundIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"animationDurationBackground\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"delayAnimationButton\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"canvaEnable\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"selectedCanvasIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"links\",\"kind\":\"object\",\"type\":\"Link\",\"relationName\":\"LinkToUser\"},{\"name\":\"labels\",\"kind\":\"object\",\"type\":\"Label\",\"relationName\":\"LabelToUser\"},{\"name\":\"socialIcons\",\"kind\":\"object\",\"type\":\"SocialIcon\",\"relationName\":\"SocialIconToUser\"},{\"name\":\"background\",\"kind\":\"object\",\"type\":\"BackgroundColor\",\"relationName\":\"BackgroundColorToUser\"},{\"name\":\"neonColors\",\"kind\":\"object\",\"type\":\"NeonColor\",\"relationName\":\"NeonColorToUser\"},{\"name\":\"statusbar\",\"kind\":\"object\",\"type\":\"Statusbar\",\"relationName\":\"StatusbarToUser\"}],\"dbName\":null},\"Link\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"showDescriptionOnHover\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"showDescription\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LinkToUser\"}],\"dbName\":null},\"Label\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fontColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LabelToUser\"}],\"dbName\":null},\"SocialIcon\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SocialIconToUser\"}],\"dbName\":null},\"BackgroundColor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BackgroundColorToUser\"}],\"dbName\":null},\"NeonColor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NeonColorToUser\"}],\"dbName\":null},\"Statusbar\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"colorBg\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"colorText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fontTextColor\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"statusText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StatusbarToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)


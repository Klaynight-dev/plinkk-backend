<%- include('partials/head.ejs', { title: 'Tableau de bord - Cosmétiques', description: 'Choisis ton flair, cadre, thème et bannière avec aperçu en direct.', robots: 'noindex,nofollow' }) %>
<%- include('partials/header-dash.ejs') %>

  <main class="max-w-7xl mx-auto grid grid-cols-12 gap-4 px-4 py-4">
    
  <%- include('partials/asside_dash.ejs', { active: 'cosmetics' }) %>

    <section class="col-span-12 lg:col-span-9 space-y-4">
      <div class="rounded-xl border border-slate-800/60 bg-slate-900/60 p-5 shadow animate-slide-up">
        <div class="flex items-center justify-between">
          <div>
            <h1 class="text-lg font-semibold mb-1">Cosmétiques</h1>
            <p class="text-xs text-slate-400">Prévisualise et sélectionne ton flair, cadre, thème, et bannière.</p>
          </div>
          <button id="starterPack" class="px-3 py-2 text-sm rounded-md bg-emerald-700/80 hover:bg-emerald-600 border border-emerald-500/40 text-white">Starter pack</button>
        </div>
      </div>

      <!-- Preview -->
      <div class="rounded-xl border border-slate-800/60 bg-slate-900/60 p-4 shadow animate-slide-up">
        <h2 class="font-medium mb-3">Aperçu</h2>
        <div id="preview" class="rounded-lg border border-slate-800 bg-slate-950/60 p-4">
          <div class="flex items-center gap-3">
            <div id="avatar" class="relative shrink-0 h-12 w-12 rounded-full grid place-items-center bg-indigo-700/70 border border-indigo-600/50 text-white font-bold">
              <%= (user.userName || 'U').charAt(0).toUpperCase() %>
              <div id="frame" class="pointer-events-none absolute inset-0 rounded-full"></div>
            </div>
            <div>
              <div class="flex items-center gap-2">
                <span class="font-semibold"><%= user.userName %></span>
                <span id="flairBadge" class="hidden text-[10px] px-2 py-0.5 rounded-full bg-slate-700/30 border border-slate-600/50 text-slate-300"></span>
              </div>
              <p class="text-xs text-slate-400">@<%= user.id %></p>
            </div>
          </div>
          <div id="banner" class="mt-3 rounded-md border border-slate-800 h-16 flex items-center justify-center text-xs text-slate-500">Bannière</div>
        </div>
        <div id="initialCosmetics" class="hidden" data-flair="<%= (cosmetics && cosmetics.selected && cosmetics.selected.flair) ? String(cosmetics.selected.flair) : '' %>" data-frame="<%= (cosmetics && cosmetics.selected && cosmetics.selected.frame) ? String(cosmetics.selected.frame) : 'none' %>" data-theme="<%= (cosmetics && cosmetics.selected && cosmetics.selected.theme) ? String(cosmetics.selected.theme) : 'system' %>" data-banner-url="<%= (cosmetics && cosmetics.selected && cosmetics.selected.bannerUrl) ? String(cosmetics.selected.bannerUrl) : '' %>"></div>
      </div>

      <!-- Sélecteurs -->
      <form id="formCosmetics" class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <div class="rounded-xl border border-slate-800/60 bg-slate-900/60 p-4 shadow animate-slide-up">
          <h2 class="font-medium mb-2">Flair</h2>
          <div class="flex flex-wrap gap-2">
            <% catalog.flairs.forEach(f => { %>
              <button type="button" data-type="flair" data-value="<%= f.key %>" class="px-3 py-1.5 text-xs rounded-md border <%= f.locked? 'border-slate-700 bg-slate-800/50 text-slate-500 cursor-not-allowed':'border-slate-700 bg-slate-800/80 hover:bg-slate-800 text-slate-200' %>" <%= f.locked ? 'disabled' : '' %>><%= f.label %></button>
            <% }) %>
          </div>
        </div>
        <div class="rounded-xl border border-slate-800/60 bg-slate-900/60 p-4 shadow animate-slide-up">
          <h2 class="font-medium mb-2">Cadre</h2>
          <div class="flex flex-wrap gap-2">
            <% catalog.frames.forEach(fr => { %>
              <button type="button" data-type="frame" data-value="<%= fr.key %>" class="px-3 py-1.5 text-xs rounded-md border border-slate-700 bg-slate-800/80 hover:bg-slate-800 text-slate-200"><%= fr.label %></button>
            <% }) %>
          </div>
        </div>
        <div class="rounded-xl border border-slate-800/60 bg-slate-900/60 p-4 shadow animate-slide-up">
          <h2 class="font-medium mb-2">Thème</h2>
          <div class="flex flex-wrap gap-2">
            <% catalog.themes.forEach(th => { %>
              <button type="button" data-type="theme" data-value="<%= th.key %>" class="px-3 py-1.5 text-xs rounded-md border border-slate-700 bg-slate-800/80 hover:bg-slate-800 text-slate-200"><%= th.label %></button>
            <% }) %>
          </div>
        </div>
        <div class="rounded-xl border border-slate-800/60 bg-slate-900/60 p-4 shadow animate-slide-up">
          <h2 class="font-medium mb-2">Bannière</h2>
          <div class="flex flex-col gap-2">
            <% catalog.banners.forEach(b => { %>
              <button type="button" data-type="banner" data-value="<%= b.key %>" class="px-3 py-1.5 text-xs rounded-md border border-slate-700 bg-slate-800/80 hover:bg-slate-800 text-slate-200 text-left"><%= b.label %></button>
            <% }) %>
            <label class="text-xs text-slate-300 mt-2">Bannière personnalisée (URL)</label>
            <input id="bannerUrl" class="w-full rounded-md bg-slate-900/60 border border-slate-700 px-3 py-2 text-sm" placeholder="https://..." value="<%= (cosmetics && cosmetics.selected && cosmetics.selected.bannerUrl) ? cosmetics.selected.bannerUrl : '' %>" />
          </div>
        </div>
        <div class="sm:col-span-2 flex justify-end gap-2">
          <button type="button" id="saveBtn" class="px-3 py-2 text-sm rounded-md bg-indigo-600 hover:bg-indigo-500 text-white">Enregistrer</button>
        </div>
      </form>
    </section>
  </main>

  <script>
    const initEl = document.getElementById('initialCosmetics');
    const state = {
      flair: (initEl?.dataset.flair || '') || null,
      frame: initEl?.dataset.frame || 'none',
      theme: initEl?.dataset.theme || 'system',
      banner: 'none',
      bannerUrl: initEl?.dataset.bannerUrl || '',
    };

    function applyPreview(){
      const flairBadge = document.getElementById('flairBadge');
      if (state.flair) { flairBadge.textContent = state.flair; flairBadge.classList.remove('hidden'); }
      else { flairBadge.classList.add('hidden'); flairBadge.textContent=''; }

      const frame = document.getElementById('frame');
      frame.className = 'pointer-events-none absolute inset-0 rounded-full';
      switch(state.frame){
        case 'neon': frame.style.boxShadow = '0 0 0 2px rgba(99,102,241,.6), 0 0 24px rgba(99,102,241,.6)'; break;
        case 'glow': frame.style.boxShadow = '0 0 0 2px rgba(16,185,129,.6), 0 0 24px rgba(16,185,129,.6)'; break;
        case 'gold': frame.style.boxShadow = '0 0 0 2px rgba(234,179,8,.7), 0 0 20px rgba(234,179,8,.5)'; break;
        default: frame.style.boxShadow = 'none';
      }

      const banner = document.getElementById('banner');
      if (state.banner === 'gradient-emerald') { banner.style.background = 'linear-gradient(135deg,#10b98133,#111827)'; }
      else if (state.banner === 'gradient-fuchsia') { banner.style.background = 'linear-gradient(135deg,#d946ef33,#111827)'; }
      else if (state.bannerUrl) { banner.style.background = `center/cover no-repeat url(${state.bannerUrl})`; }
      else { banner.style.background = 'transparent'; }
    }

    document.querySelectorAll('[data-type]')?.forEach(b => b.addEventListener('click', () => {
      const t = b.getAttribute('data-type');
      const v = b.getAttribute('data-value');
      if (t==='flair') state.flair = v;
      if (t==='frame') state.frame = v;
      if (t==='theme') state.theme = v;
      if (t==='banner') state.banner = v;
      applyPreview();
    }));

    document.getElementById('bannerUrl')?.addEventListener('input', (e)=>{
      state.bannerUrl = e.currentTarget.value;
      applyPreview();
    });

    document.getElementById('saveBtn')?.addEventListener('click', async ()=>{
      const payload = { flair: state.flair, frame: state.frame, theme: state.theme, bannerUrl: state.bannerUrl };
      const res = await fetch('/api/me/cosmetics', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });
      if (res.ok) alert('Cosmétiques enregistrés');
      else {
        const j = await res.json().catch(()=>({error:'Erreur'}));
        alert(j.error || 'Erreur');
      }
    });

    document.getElementById('starterPack')?.addEventListener('click', async ()=>{
      const res = await fetch('/api/me/cosmetics/starter-pack', { method: 'POST' });
      if (res.ok) {
        const j = await res.json();
        state.flair = j.cosmetics?.selected?.flair || null;
        state.frame = j.cosmetics?.selected?.frame || 'none';
        state.theme = j.cosmetics?.selected?.theme || 'system';
        state.bannerUrl = j.cosmetics?.selected?.bannerUrl || '';
        applyPreview();
        alert('Starter pack appliqué');
      } else {
        alert('Impossible d\'appliquer le starter pack');
      }
    });

    applyPreview();
  </script>
